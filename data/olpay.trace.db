2023-08-22 12:49:28 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]user (\000d\000a    user_id VARCHAR(100) PRIMARY KEY NOT NULL,\000d\000a    email_address VARCHAR (100) NULL,\000d\000a    first_name VARCHAR (100) NULL,\000d\000a    last_name VARCHAR (100) NULL,\000d\000a    password VARCHAR (250) NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user (
    user_id VARCHAR(100) PRIMARY KEY NOT NULL,
    email_address VARCHAR (100) NULL,
    first_name VARCHAR (100) NULL,
    last_name VARCHAR (100) NULL,
    password VARCHAR (250) NULL
) [42001-212]
2023-08-22 12:49:28 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS user_role (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    CONSTRAINT ""fk_user_role->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    role VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user_role (
    user_id VARCHAR(100) NOT NULL,
    CONSTRAINT "fk_user_role->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    role VARCHAR(100) NOT NULL,

    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)
) [42001-212]
2023-08-22 12:49:28 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS offer_click (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),\000d\000a\000d\000a    CONSTRAINT ""fk_offer_category->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_offer_category->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS offer_click (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,
    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),

    CONSTRAINT "fk_offer_category->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_offer_category->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)
) [42001-212]
2023-08-22 12:49:28 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS saved_offer (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT ""fk_saved_offer->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_saved_offer->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS saved_offer (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,

    CONSTRAINT "fk_saved_offer->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_saved_offer->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)
) [42001-212]
2023-08-22 12:49:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]user (\000d\000a    user_id VARCHAR(100) PRIMARY KEY NOT NULL,\000d\000a    email_address VARCHAR (100) NULL,\000d\000a    first_name VARCHAR (100) NULL,\000d\000a    last_name VARCHAR (100) NULL,\000d\000a    password VARCHAR (250) NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user (
    user_id VARCHAR(100) PRIMARY KEY NOT NULL,
    email_address VARCHAR (100) NULL,
    first_name VARCHAR (100) NULL,
    last_name VARCHAR (100) NULL,
    password VARCHAR (250) NULL
) [42001-212]
2023-08-22 12:49:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS user_role (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    CONSTRAINT ""fk_user_role->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    role VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user_role (
    user_id VARCHAR(100) NOT NULL,
    CONSTRAINT "fk_user_role->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    role VARCHAR(100) NOT NULL,

    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)
) [42001-212]
2023-08-22 12:49:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS offer_click (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),\000d\000a\000d\000a    CONSTRAINT ""fk_offer_category->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_offer_category->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS offer_click (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,
    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),

    CONSTRAINT "fk_offer_category->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_offer_category->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)
) [42001-212]
2023-08-22 12:49:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS saved_offer (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT ""fk_saved_offer->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_saved_offer->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS saved_offer (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,

    CONSTRAINT "fk_saved_offer->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_saved_offer->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)
) [42001-212]
2023-08-22 12:49:40 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]user (\000d\000a    user_id VARCHAR(100) PRIMARY KEY NOT NULL,\000d\000a    email_address VARCHAR (100) NULL,\000d\000a    first_name VARCHAR (100) NULL,\000d\000a    last_name VARCHAR (100) NULL,\000d\000a    password VARCHAR (250) NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user (
    user_id VARCHAR(100) PRIMARY KEY NOT NULL,
    email_address VARCHAR (100) NULL,
    first_name VARCHAR (100) NULL,
    last_name VARCHAR (100) NULL,
    password VARCHAR (250) NULL
) [42001-212]
2023-08-22 12:50:00 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]user (\000d\000a    user_id VARCHAR(100) PRIMARY KEY NOT NULL,\000d\000a    email_address VARCHAR (100) NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user (
    user_id VARCHAR(100) PRIMARY KEY NOT NULL,
    email_address VARCHAR (100) NULL
) [42001-212]
2023-08-22 12:50:27 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]user (\000d\000a    user_id VARCHAR(100) PRIMARY KEY NOT NULL,\000d\000a    email_address VARCHAR (100) NULL,\000d\000a    first_name VARCHAR (100) NULL,\000d\000a    last_name VARCHAR (100) NULL,\000d\000a    password VARCHAR (250) NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user (
    user_id VARCHAR(100) PRIMARY KEY NOT NULL,
    email_address VARCHAR (100) NULL,
    first_name VARCHAR (100) NULL,
    last_name VARCHAR (100) NULL,
    password VARCHAR (250) NULL
) [42001-212]
2023-08-22 12:50:58 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS [*]user (\000d\000a    user_id VARCHAR(100) PRIMARY KEY NOT NULL,\000d\000a    email_address VARCHAR (100) NULL,\000d\000a    first_name VARCHAR (100) NULL,\000d\000a    last_name VARCHAR (100) NULL,\000d\000a    password VARCHAR (250) NULL\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user (
    user_id VARCHAR(100) PRIMARY KEY NOT NULL,
    email_address VARCHAR (100) NULL,
    first_name VARCHAR (100) NULL,
    last_name VARCHAR (100) NULL,
    password VARCHAR (250) NULL
) [42001-212]
2023-08-22 12:50:58 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS user_role (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    CONSTRAINT ""fk_user_role->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    role VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user_role (
    user_id VARCHAR(100) NOT NULL,
    CONSTRAINT "fk_user_role->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    role VARCHAR(100) NOT NULL,

    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)
) [42001-212]
2023-08-22 12:50:58 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS offer_click (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),\000d\000a\000d\000a    CONSTRAINT ""fk_offer_category->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_offer_category->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS offer_click (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,
    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),

    CONSTRAINT "fk_offer_category->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_offer_category->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)
) [42001-212]
2023-08-22 12:50:58 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS saved_offer (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT ""fk_saved_offer->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_saved_offer->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS saved_offer (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,

    CONSTRAINT "fk_saved_offer->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_saved_offer->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)
) [42001-212]
2023-08-22 12:51:08 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS user_role (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    CONSTRAINT ""fk_user_role->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    role VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS user_role (
    user_id VARCHAR(100) NOT NULL,
    CONSTRAINT "fk_user_role->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    role VARCHAR(100) NOT NULL,

    CONSTRAINT pk_user_role PRIMARY KEY (user_id, role)
) [42001-212]
2023-08-22 12:51:08 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS offer_click (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),\000d\000a\000d\000a    CONSTRAINT ""fk_offer_category->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_offer_category->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS offer_click (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,
    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),

    CONSTRAINT "fk_offer_category->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_offer_category->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)
) [42001-212]
2023-08-22 12:51:08 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS saved_offer (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT ""fk_saved_offer->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_saved_offer->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS saved_offer (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,

    CONSTRAINT "fk_saved_offer->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_saved_offer->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)
) [42001-212]
2023-08-22 12:51:42 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS offer_click (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),\000d\000a\000d\000a    CONSTRAINT ""fk_offer_category->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_offer_category->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS offer_click (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,
    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),

    CONSTRAINT "fk_offer_category->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_offer_category->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)
) [42001-212]
2023-08-22 12:51:42 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS saved_offer (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT ""fk_saved_offer->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_saved_offer->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS saved_offer (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,

    CONSTRAINT "fk_saved_offer->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_saved_offer->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)
) [42001-212]
2023-08-22 12:56:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS offer_click (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),\000d\000a\000d\000a    CONSTRAINT ""fk_offer_category->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_offer_category->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS offer_click (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,
    created_at TIMESTAMP(6) WITH TIME ZONE NOT NULL DEFAULT now(),

    CONSTRAINT "fk_offer_category->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_offer_category->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_offer_click PRIMARY KEY (user_id, offer_id, created_at)
) [42001-212]
2023-08-22 12:56:25 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "CREATE TABLE IF NOT EXISTS saved_offer (\000d\000a    user_id VARCHAR(100) NOT NULL,\000d\000a    offer_id VARCHAR(100) NOT NULL,\000d\000a\000d\000a    CONSTRAINT ""fk_saved_offer->user"" FOREIGN KEY (user_id)\000d\000a    REFERENCES [*]user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a    CONSTRAINT ""fk_saved_offer->offer"" FOREIGN KEY (offer_id)\000d\000a    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,\000d\000a\000d\000a    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)\000d\000a)"; expected "identifier"; SQL statement:
CREATE TABLE IF NOT EXISTS saved_offer (
    user_id VARCHAR(100) NOT NULL,
    offer_id VARCHAR(100) NOT NULL,

    CONSTRAINT "fk_saved_offer->user" FOREIGN KEY (user_id)
    REFERENCES user (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT "fk_saved_offer->offer" FOREIGN KEY (offer_id)
    REFERENCES offer (offer_id) ON UPDATE CASCADE ON DELETE CASCADE,

    CONSTRAINT pk_saved_offer PRIMARY KEY (user_id, offer_id)
) [42001-212]
2023-08-22 13:11:22 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Cannot drop "USERS" because "fk_user_role->users" depends on it; SQL statement:
drop table users [90107-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:632)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.command.ddl.DropTable.prepareDrop(DropTable.java:97)
	at org.h2.command.ddl.DropTable.update(DropTable.java:121)
	at org.h2.command.CommandContainer.update(CommandContainer.java:174)
	at org.h2.command.Command.executeUpdate(Command.java:252)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:252)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-08-22 14:16:34 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into books (id, title, isbn)\000d\000avalues (1, ""title"", 123456, [*])"; expected "DEFAULT, INTERSECTS, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
insert into books (id, title, isbn)
values (1, "title", 123456, ) [42001-212]
2023-08-22 14:16:54 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "insert into BOOKS (id, title, isbn)\000d\000avalues (1, ""title"", 123456, [*])"; expected "DEFAULT, INTERSECTS, NOT, EXISTS, UNIQUE, INTERSECTS"; SQL statement:
insert into BOOKS (id, title, isbn)
values (1, "title", 123456, ) [42001-212]
2023-08-22 14:17:20 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "title" not found; SQL statement:
insert into BOOKS (id, title, isbn)
values (1, "title", 123456 ) [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:300)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:574)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-08-22 14:17:29 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "title" not found; SQL statement:
insert into BOOKS (id, title, isbn)
values (1, "title", 123456 ) [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:300)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:574)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
2023-08-22 14:17:49 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "title" not found; SQL statement:
insert into BOOKS (TITLE, ISBN)
values ("title", 123456 ) [42122-212]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:502)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:477)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:244)
	at org.h2.expression.ExpressionColumn.optimizeOther(ExpressionColumn.java:226)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:213)
	at org.h2.command.dml.Insert.doPrepare(Insert.java:300)
	at org.h2.command.dml.DataChangeStatement.prepare(DataChangeStatement.java:37)
	at org.h2.command.Parser.prepareCommand(Parser.java:574)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:631)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:554)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1116)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:237)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:223)
	at org.h2.server.web.WebApp.getResult(WebApp.java:1339)
	at org.h2.server.web.WebApp.query(WebApp.java:1137)
	at org.h2.server.web.WebApp.query(WebApp.java:1113)
	at org.h2.server.web.WebApp.process(WebApp.java:244)
	at org.h2.server.web.WebApp.processRequest(WebApp.java:176)
	at org.h2.server.web.WebServlet.doGet(WebServlet.java:129)
	at org.h2.server.web.WebServlet.doPost(WebServlet.java:166)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:681)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:890)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:834)
